/* 한줄 에디터 구현할려고 한다. 영어 소문자만 기록할 수 있고, 최대 600,000자 까지 입력 가능하다.
'커서'가 있는데 커서는 문장의 맨 앞(첫 문자 왼쪽), 문장의 맨 뒤(마지막 문자 오른쪽), 또는
문장 중간 임의의 곳(모든 연속된 두 문자 사이)에 위치 할 수 있다.
길이 L인 문자열이 현재 편집기에 입력되어있으면 커서가 위치할 수 있는 곳은 L+1가지 이다.
이 편집기 명령어는 L(커서 왼쪽으로 움직임, 맨 앞이면 무시),D(커서 오른쪽으로 움직임, 맨 뒤면 무시),
B(커서 왼쪽 문자 삭제, 커서 맨앞이면 무시, 삭제로 인해 한칸 왼쪽으로 이동한것 같지만, 실제로 커서의 오른쪽
    에 있던 문자는 그대로이다.),P$($라는 문자를 커서 왼쪽에 추가함.)

초기에 편집기에 입력되어 있는 문자열이 주어지고, 그 이후 입력한 명령어가 차례로 주어졌을 때
모든 명령어를 수행하고 난 후 편집기에 입력되어 있는 문자열을 구하는 프로그램을 작성하시오.
단 명령어가 수행되기 전에 커서는 문장의 맨 뒤에 위치하고 있다. */


/*입력 : 
1. 초기 편집기 입력 문자열 길이가 N이고, 영어 소문자, 길이는 100,000을 넘지 않음
2. 입력할 명령어 개수 M(1 <= M <= 500,000)
3. M개 줄에 걸쳐 입력할 명령어가 순서대로 주어진다.. 명령어는 위의 4가지 형태중 하나의 형태.

출력 :
1. 모든 명령어 수행 하고 난 후 편집기에 입력되어 있는 문자열 출력 */

/* 10분 풀이법 생각
- 명령어는 4개고 해당 명령어 입력이 들어왔을 때 동작하면 되게 구현하면 될듯. 커서의 위치가 포인트
커서 위치 맨앞,맨 뒤 일때 예외 케이스 작성하고, 하면 될듯.
빈 배열을 만들고, 입력 받은 명령어를 다 넣는다. 앞에서부터 하나씩 빼면서 기본 문자열에 작업 하면 될듯.
스택을 쓸건가? 큐를 쓸건가? 앞에서 부터 빼면 큐 아닌가?
M만큼 for문을 다 돌면 원하는출력값 얻을 수 있을 듯.
input M개줄 걸쳐 입력 어떻게 받는지 알아볼 것. 
"커서 구현" 이 핵심이다. 두개의 스택을 두고, 스택 간 경계를 현재 커서 위치라고 생각해보자. 두 스택사이에
커서가 존재한다고 생각하고 풀어보자. 오른쪽스택은 값이 반대로 되있을 것이다.*/

// 6. 하나의 값 또는 공백으로 구분된 여러 값들을 여러 줄에 걸쳐 뒤죽박죽 섞여서 입력받을 때
// ex) n 입력 - 공백으로 구분된 n개의 값 입력 - m 입력 - 여러 줄에 걸쳐 m개의 값 입력
const input = require("fs").readFileSync("/dev/stdin").toString().trim().split("\n");
const lStack = input[0].split('');
const len = parseInt(input[1]);
const rStack = [];

for (let i = 2; i < 2 + len; i++){
    let [cmd, value] = input[i].split(' ');
    if (cmd === 'L' && lStack.length) rStack.push(lStack.pop());
    else if (cmd === 'D' && rStack.length) lStack.push(rStack.pop());
    else if (cmd === 'B') lStack.pop();
    else if (cmd === 'P') lStack.push(value);
}

let answer = lStack.join("");
answer += rStack.reverse().join("");
console.log(answer);
